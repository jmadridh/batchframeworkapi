<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:sftp="http://www.mulesoft.org/schema/mule/sftp" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:anypoint-mq="http://www.mulesoft.org/schema/mule/anypoint-mq" xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:schedulers="http://www.mulesoft.org/schema/mule/schedulers" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/anypoint-mq http://www.mulesoft.org/schema/mule/anypoint-mq/current/mule-anypoint-mq.xsd
http://www.mulesoft.org/schema/mule/schedulers http://www.mulesoft.org/schema/mule/schedulers/current/mule-schedulers.xsd
http://www.mulesoft.org/schema/mule/sftp http://www.mulesoft.org/schema/mule/sftp/current/mule-sftp.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
    <batch:job name="batchframeworkapiBatch" max-failed-records="${max-failed-records}">
        <batch:input>
            <poll doc:name="Poll">
                <schedulers:cron-scheduler expression="0 0 * 15"/>
                <watermark variable="${poll.watermark}" default-expression="${poll.expression}" selector="MAX" selector-expression="#[payload.LastModifiedDate]"/>
                <sftp:outbound-endpoint exchange-pattern="one-way" connector-ref="SFTP" outputPattern="${sftp.outputpattern}" host="${sftp.host}" port="${sftp.port}" path="${sftp.path}" user="${sftp.username}" password="${sftp.password}" responseTimeout="10000" doc:name="SFTP">
                    <reconnect frequency="${sftp.frequency}" count="${sftp.reconnection}"/>
                </sftp:outbound-endpoint>
            </poll>
        </batch:input>
        <batch:process-records>
            <batch:step name="EachRecordFile" accept-expression="#[payload!=null]">
                <logger message="Record to process: #[payload]" level="INFO" doc:name="Logger"/>
                <choice doc:name="TypeRecordMessage">
                    <when expression="">
                        <dw:transform-message doc:name="DW One payload to AMQ">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
                        </dw:transform-message>
                    </when>
                    <when expression="">
                        <dw:transform-message doc:name="DW Two payload to AMQ">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
}]]></dw:set-payload>
                        </dw:transform-message>
                    </when>
                    <otherwise>
                        <dw:transform-message doc:name="Default DW to AMQ">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
}]]></dw:set-payload>
                        </dw:transform-message>
                    </otherwise>
                </choice>
            </batch:step>
            <batch:step name="RecordToAMQ" accept-expression="#[payload!=null]">
                <anypoint-mq:publish config-ref="Anypoint_MQ_Configuration" destination="${amq.destination}" doc:name="Anypoint MQ"/>
            </batch:step>
            <batch:step name="LogFailureStep" accept-expression="#[payload==null]" accept-policy="ONLY_FAILURES">
                <logger message="This payload is incorrect: #[payload]" level="ERROR" doc:name="Logger"/>
            </batch:step>
        </batch:process-records>
        <batch:on-complete>
            <json:object-to-json-transformer doc:name="Transform BatchJobInstance to JSON"/>
            <logger level="INFO" doc:name="Report"/>
        </batch:on-complete>
    </batch:job>
</mule>
